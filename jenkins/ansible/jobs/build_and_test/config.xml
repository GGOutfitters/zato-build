<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Use this job to build and test a Zato package or Zato packages for all supported systems. </description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>branch</name>
          <description>Define a git branch to build a Zato package from.</description>
          <defaultValue>support/2.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>package_version</name>
          <description>Define a Zato package version, e.g. 3.0.0.</description>
          <defaultValue>2.0.7</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>package_release</name>
          <description>Define a Zato package release, e.g. &apos;stable&apos; or &apos;custom-xx1&apos;.</description>
          <defaultValue>custom.test5</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>system</name>
          <description>Choose a system for which you want to build a Zato package.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>all</string>
              <string>debian-7-32</string>
              <string>debian-7-64</string>
              <string>debian-8-32</string>
              <string>debian-8-64</string>
              <string>redhat-6-32</string>
              <string>redhat-6-64</string>
              <string>redhat-7-64</string>
              <string>ubuntu-12.04-32</string>
              <string>ubuntu-12.04-64</string>
              <string>ubuntu-14.04-32</string>
              <string>ubuntu-14.04-64</string>
              <string>ubuntu-16.04-32</string>
              <string>ubuntu-16.04-64</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>debian-7-32</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=debian-7-32
</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>debian-7-64</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=debian-7-64
</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>debian-8-32</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=debian-8-32
</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>debian-8-64</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=debian-8-64
</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>redhat-6-32</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=centos-6-32
</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>redhat-6-64</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=centos-6-64</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>redhat-7-64</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=centos-7-64</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>ubuntu-12.04-32</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=ubuntu-1204-32</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>ubuntu-12.04-64</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=ubuntu-1204-64</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>ubuntu-14.04-32</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=ubuntu-1404-32</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>ubuntu-14.04-64</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=ubuntu-1404-64</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>ubuntu-16.04-32</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=ubuntu-1604-32</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>ubuntu-16.04-64</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>host=ubuntu-1604-64</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.logic.And" plugin="run-condition@1.0">
        <conditions>
          <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
            <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition">
              <worstResult>
                <name>SUCCESS</name>
                <ordinal>0</ordinal>
                <color>BLUE</color>
                <completeBuild>true</completeBuild>
              </worstResult>
              <bestResult>
                <name>SUCCESS</name>
                <ordinal>0</ordinal>
                <color>BLUE</color>
                <completeBuild>true</completeBuild>
              </bestResult>
            </condition>
          </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
          <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
            <condition class="org.jenkins_ci.plugins.run_condition.logic.Not">
              <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
                <arg1>$system</arg1>
                <arg2>all</arg2>
                <ignoreCase>false</ignoreCase>
              </condition>
            </condition>
          </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
        </conditions>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command>#!/bin/bash

cd $ansible_root_path
ansible-playbook -i environments/testing generate_host_vars.yml --extra-vars &quot;host=$host package_version=$package_version \
    package_release=$package_release branch=$branch system=$system&quot; -vvvv
ansible-playbook -i environments/testing generate_repo_vars.yml --extra-vars &quot;host=$host system=$system&quot; -vvvv
ansible-playbook -i environments/testing build_and_test.yml --extra-vars &quot;host=$host system=$system user=$ansible_user&quot; -vvvv</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.logic.And" plugin="run-condition@1.0">
        <conditions>
          <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
            <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition">
              <worstResult>
                <name>SUCCESS</name>
                <ordinal>0</ordinal>
                <color>BLUE</color>
                <completeBuild>true</completeBuild>
              </worstResult>
              <bestResult>
                <name>SUCCESS</name>
                <ordinal>0</ordinal>
                <color>BLUE</color>
                <completeBuild>true</completeBuild>
              </bestResult>
            </condition>
          </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
          <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
            <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
              <arg1>$system</arg1>
              <arg2>all</arg2>
              <ignoreCase>false</ignoreCase>
            </condition>
          </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
        </conditions>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command>#!/bin/bash

declare -A systems
systems=(
  [debian-7-32]=debian-7-32
  [debian-7-64]=debian-7-64
  [debian-8-32]=debian-8-32
  [debian-8-64]=debian-8-64
  [redhat-6-32]=centos-6-32
  [redhat-6-64]=centos-6-64
  [redhat-7-64]=centos-7-64
  [ubuntu-12.04-32]=ubuntu-1204-32
  [ubuntu-12.04-64]=ubuntu-1204-64
  [ubuntu-14.04-32]=ubuntu-1404-32
  [ubuntu-14.04-64]=ubuntu-1404-64
  [ubuntu-16.04-32]=ubuntu-1604-32
  [ubuntu-16.04-64]=ubuntu-1604-64
)
  
for system in ${!systems[@]}
do
  cd $ansible_root_path
  if [ ! -f ./output/$system/zato-$package_version-$package_release* ];
  then
    ansible-playbook -i environments/testing generate_host_vars.yml --extra-vars &quot;host=${systems[$system]} package_version=$package_version \
      package_release=$package_release branch=$branch system=$system&quot;
    ansible-playbook -i environments/testing generate_repo_vars.yml --extra-vars &quot;host=${systems[$system]} system=$system&quot;
    ansible-playbook -i environments/testing build_and_test.yml --extra-vars &quot;host=${systems[$system]} system=$system user=$ansible_user&quot;
  else
    echo &quot;**** Package zato-$package_version-$package_release for $system has been build already. Skipping. ****&quot;
  fi  
done
</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.5"/>
    <EnvInjectBuildWrapper plugin="envinject@1.92.1">
      <info>
        <propertiesContent>package_version=$package_version
package_release=$package_release
branch=$branch
system=$system



</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
</project>
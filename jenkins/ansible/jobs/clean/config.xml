<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This job removes a Zato environment in which a Zato package was build or tested.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>environment</name>
          <description>Choose a type of environment you want to remove.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>quickstart</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>system</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>all</string>
              <string>debian-7-32</string>
              <string>debian-7-64</string>
              <string>debian-8-32</string>
              <string>debian-8-64</string>
              <string>redhat-6-32</string>
              <string>redhat-6-64</string>
              <string>redhat-7-64</string>
              <string>ubuntu-12.04-32</string>
              <string>ubuntu-12.04-64</string>
              <string>ubuntu-14.04-32</string>
              <string>ubuntu-14.04-64</string>
              <string>ubuntu-16.04-32</string>
              <string>ubuntu-16.04-64</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.logic.Not" plugin="run-condition@1.0">
        <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
          <arg1>$system</arg1>
          <arg2>all</arg2>
          <ignoreCase>false</ignoreCase>
        </condition>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command>cd $ansible_root_path
ansible-playbook -i environments/testing clean.yml --extra-vars &quot;system=$system&quot;</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$system</arg1>
        <arg2>all</arg2>
        <ignoreCase>false</ignoreCase>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command>#!/bin/bash

declare -a systems
systems=(
   debian-7-32
   debian-7-64
   debian-8-32
   debian-8-64
   redhat-6-32
   redhat-6-64
   redhat-7-64
   ubuntu-12.04-32
   ubuntu-12.04-64
   ubuntu-14.04-32
   ubuntu-14.04-64
   ubuntu-16.04-32
   ubuntu-16.04-64
)
  
for system in ${systems[@]}
do
  cd $ansible_root_path/vm/$system
  if [[ $(vagrant status | awk &apos;/^default/ { print $2 }&apos;) == &quot;running&quot; ]] || [[ $(vagrant status | awk &apos;/^default/ { print $2 }&apos;) == &quot;aborted&quot; ]];
  then
    cd $ansible_root_path
    ansible-playbook -i environments/testing clean.yml --extra-vars &quot;system=$system&quot; -vvvv
  fi  
done</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
---
# You can add users to the docker group to allow them to manage docker
# containers. This playbook uses sudo rather than the vagrant user because
# Ansible uses ControlPersist for SSH connections. The first time this playbook
# runs, the docker commands would fail if run by the vagrant user, since the
# persisted connection state isn't aware of the addition of the 'docker' group.

- name: General | Package Installation.
  apt: name={{ item }} state=present
  become: yes
  loop:
    - python-pip
    - git
    - apt-transport-https
    - curl
    - htop
    - libcurl4-openssl-dev
    - mc
    - redis-server
    - software-properties-common
    - ssh
    - sudo
    - supervisor
    - vim
    - tzdata
    - postgresql
    - postgresql-contrib
    - postgresql-client
    - python-psycopg2

- name: General | Add repository universe.
  command: add-apt-repository universe

# - name: General | Initiate database
#   command: initdb
#            creates=/var/lib/pgsql/data/postgresql.conf

- name: General | Start PostgreSQL and enable at boot
  service: name=postgresql
          enabled=yes
          state=started

- name: General | Ensure PostgreSQL is listening on all localhost
  lineinfile: dest=/etc/postgresql/10/main/postgresql.conf
     regexp='^#?listen_addresses\s*='
     line="listen_addresses = '127.0.0.1'"
     state=present
  notify: restart postgresql


- name: Zato | Add Zato's Apt signing key
  apt_key:
    url: https://zato.io/repo/zato-0CBD7F72.pgp.asc
    state: present

- name: Zato | Add Zato repository.
  apt_repository:
    repo: deb https://zato.io/repo/stable/3.0/ubuntu bionic main
    state: present
    filename: zato

- name: Zato | Zato package installation.
  apt: name=zato state=present
  become: yes

- name: Start service redis, if not started
  service:
    name: redis-server
    state: started

- name: Start service postgresql, if not started
  service:
    name: postgresql
    state: started

- name: Zato | Zato's global configuration
  shell: |
    echo "{{zato_ssh_password}}" > /opt/zato/zato_user_password && \
    chown zato:zato /opt/zato/zato_user_password && \
    echo "zato:$(cat /opt/zato/zato_user_password)" > /opt/zato/change_zato_password && \
    chpasswd < /opt/zato/change_zato_password

    cd /opt/zato/ && wget -i https://raw.githubusercontent.com/zatosource/zato-build/master/docker/quickstart/filelist
    
    if [[ ! -d /opt/zato/env/qs-1 ]];then
      mkdir -p /opt/zato/env/qs-1
      chown zato. /opt/zato/env/qs-1
    fi

    exit 0
  args:
    executable: /bin/bash

- name: Zato | Zato's quickstart
  become: yes
  become_user: zato
  shell: |
    cd /opt/zato/env/qs-1 || exit 1

    set -x # enable show commands
    {{zato_bin}} quickstart create --odb_user postgres --kvdb_password '' /opt/zato/env/qs-1/ postgresql localhost 6379
    {{zato_bin}} from-config /opt/zato/update_password.config
    sed -i 's/127.0.0.1:11223/0.0.0.0:11223/g' /opt/zato/env/qs-1/load-balancer/config/repo/zato.config
    sed -i 's/gunicorn_workers=2/gunicorn_workers=1/g' /opt/zato/env/qs-1/server1/config/repo/server.conf
    sed -i 's/gunicorn_workers=2/gunicorn_workers=1/g' /opt/zato/env/qs-1/server2/config/repo/server.conf
    set +x # disable show commands
    exit 0
  args:
    executable: /bin/bash

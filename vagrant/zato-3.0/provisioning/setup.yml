---

- name: General | Package Installation.
  apt: name={{ item }} state=present
  become: yes
  register: apt_res
  retries: 5
  until: apt_res is success
  loop:
    - python-pip
    - git
    - apt-transport-https
    - curl
    - htop
    - libcurl4-openssl-dev
    - mc
    - redis-server
    - software-properties-common
    - ssh
    - sudo
    - supervisor
    - vim
    - tzdata
    - postgresql
    - postgresql-contrib
    - postgresql-client
    - python-psycopg2

- name: General | Add repository universe.
  command: add-apt-repository universe

- name: General | Ensure PostgreSQL is listening on all localhost
  lineinfile: dest=/etc/postgresql/10/main/postgresql.conf
     regexp='^#?listen_addresses\s*='
     line="listen_addresses = '127.0.0.1'"
     state=present
  notify: restart postgresql

- name: Zato | Add Zato's Apt signing key
  apt_key:
    url: https://zato.io/repo/zato-0CBD7F72.pgp.asc
    state: present
  register: task_result
  until: task_result is succeeded
  retries: 10
  delay: 5

- name: Zato | Add Zato repository.
  apt_repository:
    repo: deb https://zato.io/repo/stable/3.0/ubuntu bionic main
    state: present
    filename: zato
  register: task_result
  until: task_result is succeeded
  retries: 10
  delay: 5

- name: Zato | Zato package installation.
  apt: name=zato state=present
  become: yes
  register: apt_res
  retries: 5
  until: apt_res is success

- name: Start service redis, if not started
  service:
    name: redis-server
    state: started
    enabled: yes

- name: Start service postgresql, if not started
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Start service supervisor, if not started
  service:
    name: supervisor
    state: started
    enabled: yes

- name: Zato | Download /opt/zato/update_password.config
  get_url:
    url: https://raw.githubusercontent.com/zatosource/zato-build/master/docker/quickstart/update_password.config
    dest: /opt/zato/update_password.config
    mode: 0644
    owner: zato
    group: zato

- name: Zato | Download /opt/zato/zato_start_load_balancer
  get_url:
    url: https://raw.githubusercontent.com/zatosource/zato-build/master/docker/quickstart/zato_start_load_balancer
    dest: /opt/zato/zato_start_load_balancer
    mode: 0755

- name: Zato | Download /opt/zato/zato_start_scheduler
  get_url:
    url: https://raw.githubusercontent.com/zatosource/zato-build/master/docker/quickstart/zato_start_scheduler
    dest: /opt/zato/zato_start_scheduler
    mode: 0755

- name: Zato | Download /opt/zato/zato_start_server1
  get_url:
    url: https://raw.githubusercontent.com/zatosource/zato-build/master/docker/quickstart/zato_start_server1
    dest: /opt/zato/zato_start_server1
    mode: 0755

- name: Zato | Download /opt/zato/zato_start_server2
  get_url:
    url: https://raw.githubusercontent.com/zatosource/zato-build/master/docker/quickstart/zato_start_server2
    dest: /opt/zato/zato_start_server2
    mode: 0755

- name: Zato | Download /opt/zato/zato_start_web_admin
  get_url:
    url: https://raw.githubusercontent.com/zatosource/zato-build/master/docker/quickstart/zato_start_web_admin
    dest: /opt/zato/zato_start_web_admin
    mode: 0755

- name: Zato | Create quickstart directory
  file: path=/opt/zato/env/qs-1/ owner=zato group=zato
        state=directory
  become: yes
  become_user: zato

- name: Zato | create quickstart
  shell: /opt/zato/current/bin/zato quickstart create \
         --odb_host "localhost" \
         --odb_port 5432 \
         --odb_user "zato" \
         --odb_db_name "zato" \
         --odb_password "{{ dbpassword }}" \
         --kvdb_password '' \
         /opt/zato/env/qs-1 postgresql localhost 6379
         --verbose
  become: yes
  become_user: zato
  args:
    creates: /opt/zato/env/qs-1/ca

- name: Zato | Save ssh password
  shell: |
    set -x # enable show commands
    [[ -f /opt/zato-env.sh ]] && source /opt/zato-env.sh

    cd /opt/zato/
    if [[ -z "${ZATO_SSH_PASSWORD}" ]]; then
      echo "Generating a password for zato user"
      ZATO_SSH_PASSWORD="$(uuidgen)"
    fi

    echo "${ZATO_SSH_PASSWORD}" > /opt/zato/zato_user_password && \
      chown zato:zato /opt/zato/zato_user_password && \
      echo "zato:${ZATO_SSH_PASSWORD}" > /opt/zato/change_zato_password && \
      chpasswd < /opt/zato/change_zato_password
  args:
    chdir: /opt/zato/env/qs-1
    creates: /opt/zato/zato_user_password
    executable: /bin/bash

- name: Zato | Set webadmin password
  shell: |
    set -x # enable show commands
    [[ -f /opt/zato-env.sh ]] && source /opt/zato-env.sh

    cd /opt/zato/
    if [[ -z "${ZATO_WEB_ADMIN_PASSWORD}" ]]; then
      echo "Generating a password for web admin"
      ZATO_WEB_ADMIN_PASSWORD="$(uuidgen)"
    fi

    echo "${ZATO_WEB_ADMIN_PASSWORD}" > /opt/zato/web_admin_password
    echo "password=${ZATO_WEB_ADMIN_PASSWORD}" >> /opt/zato/update_password.config

    /opt/zato/current/bin/zato from-config \
      /opt/zato/update_password.config --verbose || exit 1
  args:
    chdir: /opt/zato/env/qs-1
    creates: /opt/zato/web_admin_password
    executable: /bin/bash
  become: yes
  become_user: zato

- name: Zato | Granting access to load-balancer
  replace:
   path: /opt/zato/env/qs-1/load-balancer/config/repo/zato.config
   regexp: '127\.0\.0\.1:11223'
   replace: '0.0.0.0:11223'
   backup: yes

- name: Zato | Reduce Workers in server1
  replace:
   path: /opt/zato/env/qs-1/server1/config/repo/server.conf
   regexp: 'gunicorn_workers=2'
   replace: 'gunicorn_workers=1'
   backup: yes

- name: Zato | Reduce Workers in server2
  replace:
   path: /opt/zato/env/qs-1/server2/config/repo/server.conf
   regexp: 'gunicorn_workers=2'
   replace: 'gunicorn_workers=1'
   backup: yes

- name: Zato | Checking if hot deploy is enabled.
  stat:
    path: /opt/hot-deploy
  register: hot_deploy_details

- name: Zato | Activating hot deploy
  replace:
   path: /opt/zato/env/qs-1/server1/config/repo/server.conf
   regexp: 'pickup_dir=.*'
   replace: 'pickup_dir=/opt/hot-deploy'
   backup: yes
  when: hot_deploy_details.stat.exists

- name: Zato | Granting access to load-balancer
  replace:
   path: /opt/zato/env/qs-1/server1/config/repo/server.conf
   regexp: '127\.0\.0\.1:11223'
   replace: '0.0.0.0:11223'
   backup: yes
  when: hot_deploy_details.stat.exists

- name: Zato | Copying Zato's supervisord config
  copy:
    src: provisioning/supervisord.conf
    dest: /etc/supervisor/conf.d/zato.conf
    mode: 0644
  notify: restart supervisor

- meta: flush_handlers

- name: Zato | Set ide_publisher password
  shell: |
    set -x # enable show commands
    [[ -f /opt/zato-env.sh ]] && source /opt/zato-env.sh

    cd /opt/zato/
    if [[ -n "${ZATO_IDE_PUBLISHER_PASSWORD}" ]]; then
      curl -sfL $(curl -s https://api.github.com/repos/powerman/dockerize/releases/latest | grep -i /dockerize-$(uname -s)-$(uname -m)\" | cut -d\" -f4) | install /dev/stdin /opt/zato/dockerize

      # wait for server1
      /opt/zato/dockerize -wait-http-status-code 200 -wait http://localhost:17010/zato/ping -timeout 10m

      /opt/zato/current/bin/zato service invoke --verbose --payload \
        "{\"password1\":\"${ZATO_IDE_PUBLISHER_PASSWORD}\", \"password2\": \"${ZATO_IDE_PUBLISHER_PASSWORD}\", \"id\": 4}" \
        /opt/zato/env/qs-1/server1/ zato.security.basic-auth.change-password || exit 1

      echo "${ZATO_IDE_PUBLISHER_PASSWORD}" > /opt/zato/zato_ide_publisher_password
    else
      touch /opt/zato/zato_ide_publisher_password
    fi
  args:
    chdir: /opt/zato/env/qs-1
    creates: /opt/zato/zato_ide_publisher_password
    executable: /bin/bash
  become: yes
  become_user: zato
